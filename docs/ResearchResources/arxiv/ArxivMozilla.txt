If there are any errors
please Abort, and run `arxiv_required` for required package installation, and start again
Please wait while we phrase the requested information from global arxiv[arxiv.org] servers 
------------>
---------------------------->
------------------------------------------------------>
 
Categorizing Defects in Infrastructure as Code (Akond Rahman - 21 September, 2018)
We use 1021, 3074, 7808, and 972 commits that map to 165, 580, 1383, and 296 IaC scripts, respectively, collected from Mirantis, Mozilla, Openstack, and Wikimedia Commons. With 89 raters we apply the defect type attribute of the orthogonal defect classification (ODC) methodology to categorize the defects. We also review prior literature that have used ODC to categorize defects, and compare the defect category distribution of IaC scripts with 26 non-IaC software systems. Respectively, for Mirantis, Mozilla, Openstack, and Wikimedia Commons, we observe (i) 49.3%, 36.5%, 57.6%, and 62.7% of the IaC defects to contain syntax and configuration-related defects; (ii) syntax and configuration-related defects are more prevalent amongst IaC scripts compared to that of previously-studied non-IaC software.
Link: https://arxiv.org/abs/1809.07937
====================================================
On the Use of Emoticons in Open Source Software Development (MaÃ«lick Claes - 9 October, 2018)
While the overall ratio of comments with emoticons is of 2% and 3.6% for Apache and Mozilla, some individual developers can have a ratio above 20%
Link: https://arxiv.org/abs/1808.10639
====================================================
Timelines for In-Code Discovery of Zero-Day Vulnerabilities and Supply-Chain Attacks (Andrew J. Lohn - 31 August, 2018)
We analyze the version-to-version changes in three types of open source software (Mozilla Firefox, GNU/Linus, and glibc) to understand the rate at which the various pieces of code are amended and find that much of the revision behavior can be captured with a simple intuitive model. We use that model and the data from over a billion unique lines of code in 87 different versions of software to specify the bounds for in-code discoverability of vulnerabilities - from expertly hidden to obviously observable.
Link: https://arxiv.org/abs/1808.10062
====================================================
Reduction of Redundant Rules in Association Rule Mining-Based Bug Assignment (Meera Sharma - 23 July, 2018)
We have extracted the association rules for top 5 assignees in each cluster.The proposed method has been empirically validated on 14696 bug reports of Mozilla open source software project, namely, Seamonkey, Firefox and Bugzilla
Link: https://arxiv.org/abs/1807.08906
====================================================
Where Are The Gaps? A Systematic Mapping Study of Infrastructure as Code Research (Akond Rahman - 12 July, 2018)
Information technology (IT) organizations, such as Github, Mozilla, Facebook, Google and Netflix have adopted IaC. By systematically applying inclusion and exclusion criteria, we identify 31 publications related to IaC. According to our analysis, 52% of the studied 31 publications propose a framework or tool to implement the practice of IaC or extend the functionality of an existing IaC tool
Link: https://arxiv.org/abs/1807.04872
====================================================
The Impact of IR-based Classifier Configuration on the Performance and the Effort of Method-Level Bug Localization (Chakkrit Tantithamthavorn - 20 June, 2018)
Method: We execute a large space of classifier configuration, 3,172 in total, on 5,266 bug reports of two software systems, i.e., Eclipse and Mozilla. Results: We find that (1) the choice of classifier configuration impacts the top-k performance from 0.44% to 36% and the required effort from 4,395 to 50,000 LOC; (2) classifier configurations with similar top-k performance might require different efforts; (3) VSM achieves both the best top-k performance and the least required effort for method-level bug localization; (4) the likelihood of randomly picking a configuration that performs within 20% of the best top-k classifier configuration is on average 5.4% and that of the least effort is on average 1%; (5) configurations related to the entity representation of the analyzed data have the most impact on both the top-k performance and the required effort; and (6) the most efficient classifier configuration obtained at the method-level can also be used at the file-level (and vice versa)
Link: https://arxiv.org/abs/1806.07727
====================================================
Towards Identifying Paid Open Source Developers - A Case Study with Mozilla Developers (MaÃ«lick Claes - 6 April, 2018)
By relying on code source repository meta-data from Mozilla, and manually collected employment status, we built a dataset of the most active developers, both volunteer and hired by Mozilla. The results show that our proposed method identify paid and unpaid commits with an AUC of 0.75 using random forest, which is higher than the AUC of 0.64 obtained with the best of the previously used automatic methods.
Link: https://arxiv.org/abs/1804.02153
====================================================
Cost-aware Vulnerability Prediction: the HARMLESS Approach (Zhe Yu - 17 March, 2018)
In experiments on a case study of Mozilla Firefox project, HARMLESS found 90, 95, 99% of known vulnerabilities by reviewing and testing 26, 33, 45% of the source code files, respectively.
Link: https://arxiv.org/abs/1803.06545
====================================================
Audio Adversarial Examples: Targeted Attacks on Speech-to-Text (Nicholas Carlini - 29 March, 2018)
We apply our white-box iterative optimization-based attack to Mozilla's implementation DeepSpeech end-to-end, and show it has a 100% success rate
Link: https://arxiv.org/abs/1801.01944
====================================================
Abnormal Working Hours: Effect of Rapid Releases and Implications to Work Content (MaÃ«lick Claes - 12 April, 2017)
Moreover we compare Mozilla Firefox work pattern with another Mozilla product, Firefox OS, which has a different release cycle than Firefox. Firefox experiences proportionally more activity on weekends than Firefox OS (Cohen's d = 0.94). We find that switching to rapid releases has reduced weekend work (Cohen's d = 1.43) and working during the night (Cohen's d = 0.45). considering only individuals with Mozilla foundation email address, although, the effect sizes are smaller for weekends (Cohen's d = 0.64) and nights (Cohen's d = 0.23)
Link: https://arxiv.org/abs/1704.03652
====================================================
Benchmarking Web-testing - Selenium versus Watir and the Choice of Programming Language and Browser (Miikka Kuutila - 2 November, 2016)
We studied 5 programming language bindings (C#, Java, Python, and Ruby for Selenium, while Watir supports Ruby only) and 4 browsers (Google Chrome, Internet Explorer, Mozilla Firefox and Opera). The effect size of the difference between the slowest and fastest configuration was very high (Cohens d=41.5, 91% increase in execution time)
Link: https://arxiv.org/abs/1611.00578
====================================================
A Decision Support System to Choose Optimal Release Cycle Length in Incremental Software Development Environments (Avnish Chandra Suman - 6 October, 2016)
Best examples of success of this approach has been Ubuntu Operating system that has a 6 months release cycle and popular web browsers such as Google Chrome, Opera, Mozilla Firefox
Link: https://arxiv.org/abs/1610.02127
====================================================
Tracking Protection in Firefox For Privacy and Performance (Georgios Kontaxis - 12 June, 2015)
We present Tracking Protection in the Mozilla Firefox web browser. We evaluate our approach and demonstrate a 67.5% reduction in the number of HTTP cookies set during a crawl of the Alexa top 200 news sites. Since Firefox does not download and render content from tracking domains, Tracking Protection also enjoys performance benefits of a 44% median reduction in page load time and 39% reduction in data usage in the Alexa top 200 news sites.
Link: https://arxiv.org/abs/1506.04104
====================================================
How Open Should Open Source Be? (Adam Barth - 2 September, 2011)
In response to Mozilla obfuscating descriptions, we show that machine learning can exploit metadata such as patch author to search for security patches, extending the total window of vulnerability by 5 months in an 8 month period when examining up to two patches daily
Link: https://arxiv.org/abs/1109.0507
====================================================
Measuring LDA Topic Stability from Clusters of Replicated Runs (Mika MÃ¤ntylÃ¤ - 24 August, 2018)
Results: We provide an initial validation where our method is used for 270,000 Mozilla Firefox commit messages with k=20 and n=20
Link: https://arxiv.org/abs/1808.08098
====================================================
ADAGIO: Interactive Experimentation with Adversarial Attack and Defense for Audio (Nilaksh Das - 30 May, 2018)
We will demonstrate ADAGIO and invite the audience to try it on the Mozilla Common Voice dataset.
Link: https://arxiv.org/abs/1805.11852
====================================================
DeepTriage: Exploring the Effectiveness of Deep Learning for Bug Triaging (Senthil Mani - 4 January, 2018)
Another contribution is to make this research reproducible by making the source code available and creating a public benchmark dataset of bug reports from three open source bug tracking system: Google Chromium (383,104 bug reports), Mozilla Core (314,388 bug reports), and Mozilla Firefox (162,307 bug reports)
Link: https://arxiv.org/abs/1801.01275
====================================================
Is It Safe to Uplift This Patch? An Empirical Study on Mozilla Firefox (Marco Castelluccio - 26 September, 2017)
This paper examines patch uplift operations at Mozilla, with the aim to identify the characteristics of uplifted patches that introduce regressions. Additionally, we interviewed three Mozilla release managers to understand organizational factors that affect patch uplift decisions and outcomes
Link: https://arxiv.org/abs/1709.08852
====================================================
Debt-Prone Bugs: Technical Debt in Software Maintenance (Jifeng Xuan - 16 April, 2017)
A case study on Mozilla is conducted to examine the impact of debt-prone bugs in software products
Link: https://arxiv.org/abs/1704.04766
====================================================
Developer Prioritization in Bug Repositories (Jifeng Xuan - 16 April, 2017)
We empirically investigate the performance of our model and its applications in bug repositories of Eclipse and Mozilla
Link: https://arxiv.org/abs/1704.04764
====================================================
Towards Effective Bug Triage with Towards Effective Bug Triage with Software Data Reduction Techniques (Jifeng Xuan - 16 April, 2017)
We empirically investigate the performance of data reduction on totally 600,000 bug reports of two large open source projects, namely Eclipse and Mozilla
Link: https://arxiv.org/abs/1704.04761
====================================================
Revealing Task Driven Knowledge Worker Behaviors in Open Source Software Communities (Hongrui Wu - 25 February, 2017)
In this paper, we conduct an empirical analysis of online collaborative activities closely related to assure software quality in two well-known OSS communities, namely Eclipse and Mozilla
Link: https://arxiv.org/abs/1702.07900
====================================================
No domain left behind: is Let's Encrypt democratizing encryption? (Maarten Aertsen - 9 December, 2016)
To address these issues, the Electronic Frontier Foundation, Mozilla Foundation, and the University of Michigan have set up Let's Encrypt (LE), a certificate authority that provides both free X.509 certificates and software that automates the deployment of these certificates
Link: https://arxiv.org/abs/1612.03005
====================================================
TouchSignatures: Identification of User Touch Actions and PINs Based on Mobile Sensor Data via JavaScript (Maryam Mehrnezhad - 12 February, 2016)
The W3C community and major mobile browser vendors including Mozilla, Google, Apple and Opera have acknowledge our work and are implementing some of our proposed countermeasures.
Link: https://arxiv.org/abs/1602.04115
====================================================
The Virtual Splitter: Refactoring Web Applications for the Multiscreen Environment (Mira Sarkis - 19 October, 2015)
Developed as a Chrome extension, our approach is validated on several web applications, including a YouTube page and a video application from Mozilla.
Link: https://arxiv.org/abs/1510.05405
====================================================
The Case for a General and Interaction-based Third-party Cookie Policy (Istemi Ekin Akkus - 12 June, 2015)
We implemented a proof-of-concept of our policy as browser extensions for Mozilla Firefox and Google Chrome
Link: https://arxiv.org/abs/1506.04107
====================================================
Analyzing the BrowserID SSO System with Primary Identity Providers Using an Expressive Model of the Web (Daniel Fett - 1 April, 2015)
BrowserID is a complex, real-world Single Sign-On (SSO) System for web applications recently developed by Mozilla. While in the primary mode BrowserID runs with arbitrary identity providers (IdPs), in the secondary mode there is one IdP only, namely Mozilla's default IdP.
Link: https://arxiv.org/abs/1411.7210
====================================================
A First Look at Firefox OS Security (Daniel Defreez - 28 October, 2014)
With Firefox OS, Mozilla is making a serious push for an HTML5-based mobile platform. In order to assuage security concerns over providing hardware access to web applications, Mozilla has introduced a number of mechanisms that make the security landscape of Firefox OS distinct from both the desktop web and other mobile operating systems
Link: https://arxiv.org/abs/1410.7754
====================================================
Rust for functional programmers (Raphael Poss - 21 July, 2014)
This article provides an introduction to Rust, a systems language by Mozilla, to programmers already familiar with Haskell, OCaml or other functional languages.
Link: https://arxiv.org/abs/1407.5670
====================================================
PLOS/Mozilla Scientific Code Review Pilot: Summary of Findings (Marian Petre - 11 November, 2013)
PLOS and Mozilla conducted a month-long pilot study in which professional developers performed code reviews on software associated with papers published in PLOS Computational Biology
Link: https://arxiv.org/abs/1311.2412
====================================================
SSL Enhancement (Fenil Kavathia - 17 September, 2012)
In this article we depict this attack and to nullify it, we have proposed a technique cum practical solution to strengthen data security by developing mozilla-firefox add-on and servlet code which will strengthen our defense against the https hijacking attacks.
Link: https://arxiv.org/abs/1209.3557
====================================================
PAKE-based mutual HTTP authentication for preventing phishing attacks (Yutaka Oiwa - 27 November, 2009)
The protocol is proposed as an Internet Draft submitted to IETF, and implemented in both server side (as an Apache extension) and client side (as a Mozilla-based browser and an IE-based one)
Link: https://arxiv.org/abs/0911.5230
====================================================
Certificate-based Single Sign-On Mechanism for Multi-Platform Distributed Systems (Magyari Attila - 9 September, 2009)
The novelty of our middleware lies on the use of XPCOM components, this way we provide a different services that can be used on every platform where Mozilla is available
Link: https://arxiv.org/abs/0909.1640
====================================================
An Artificial Immune System as a Recommender System for Web Sites (Tom Morrison - 3 April, 2008)
URLs will be classified using the DMOZ (Directory Mozilla) database of the Open Directory Project as our ontology
Link: https://arxiv.org/abs/0804.0573
====================================================
Punctuated Equilibrium in Software Evolution (A. A. Gorshenev - 9 July, 2003)
The dynamics of modifications studied for three free, open source programs Mozilla, Free-BSD and Emacs using the data from version control systems
Link: https://arxiv.org/abs/cond-mat/0307201
====================================================
Computer Security: Competing Concepts (Helen Nissenbaum - 26 October, 2001)
Our project draws on the methods and perspectives of empirical social science, computer science, and philosophy to identify values embodied in existing web-browser security and also to prescribe changes to existing systems (in particular, Mozilla) so that values relevant to web-browser systems are better served than presently they are
Link: https://arxiv.org/abs/cs/0110001
====================================================
